% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/glm.apg.R
\name{glm.apg}
\alias{glm.apg}
\title{Fit a generalized linear model with various regularizations.}
\usage{
glm.apg(x, y, family = c("gaussian", "binomial", "survival"),
  penalty = c("elasticnet", "isotonic", "boundednondecreasing"), lambda = 1,
  intercept = TRUE, opts = list())
}
\arguments{
\item{x}{The input matrix, each row is a sample, each column a feature.}

\item{y}{The response variable. Quantitative for \code{family="gaussian"}, binary with values \code{+1} and \code{-1} for \code{family="binomial"}, survival data with two columes (follow-up time and event) for \code{family="survival"}}

\item{family}{The response type. For \code{family="gaussian"}, ...}

\item{penalty}{The penalty type.}

\item{lambda}{The scaling of the penalty (default \code{1})}

\item{intercept}{Should intercept(s) be fitted (default=\code{TRUE}) or set to zero (\code{FALSE})}

\item{opts}{List of parameters, which must include: \itemize{ \item }}
}
\value{
toto
}
\description{
Fit a generalized linear model via penalized maximum likelihood. Fits linear
and logistic regression models, with elastic net or isotonic regularization.
}
\examples{
n <- 100
p <- 5
x <- matrix(rnorm(n*p),n,p)
y <- rbinom(n,1,0.5)*2-1
lambda <- 0.2*max(abs(crossprod(y,x)))/n

# Lasso regression with intercept:
m <- glm.apg(x, y, lambda=lambda)
# same as
library(glmnet)
m2 <- glmnet(x, y, standardize=FALSE, lambda=lambda)

# Ridge regression with intercept:
m <- glm.apg(x, y, lambda=lambda, opts=list(alpha=0))
# Does the same as
m2 <- glmnet(x, y, standardize=FALSE, lambda=lambda, alpha=0)

# Elastic net regression with intercept:
m <- glm.apg(x, y, lambda=lambda, opts=list(alpha=0.5))
# Does the same as
m2 <- glmnet(x, y, standardize=FALSE, lambda=lambda, alpha=0.5)

# Elastic net regression without intercept:
m <- glm.apg(x, y, lambda=lambda, intercept=FALSE, opts=list(alpha=0.5))
# Does the same as
m2 <- glmnet(x, y, standardize=FALSE, lambda=lambda, alpha=0.5, intercept=FALSE)

# Lasso penalized logistic regression with intercept:
m <- glm.apg(x, y, family="binomial", lambda=lambda)
# Does the same as
m2 <- glmnet(x, y, family="binomial", lambda=lambda, standardize=FALSE)

# Elastic net penalized logistic regression with intercept:
m <- glm.apg(x, y, family="binomial", lambda=lambda, opts=list(alpha=0.5))
# Does the same as
m2 <- glmnet(x, y, family="binomial", lambda=lambda, standardize=FALSE, alpha=0.5)

# Isotonic regression with offset
m <- glm.apg(x, y, penalty="isotonic", lambda=lambda)

# Isotonic logistic regression with offset
m <- glm.apg(x, y, family="binomial", penalty="isotonic", lambda=lambda)

# Isotonic logistic regression with offset, with non-decreasing model of bounded norm
m <- glm.apg(x, y, family="binomial", penalty="boundednondecreasing", lambda=lambda, opts=list(maxnorm=2))
}

